apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.airflow.webserver_name }}
  namespace: {{ .Values.airflow.infra_namespace }}
  labels:
    app: {{ .Values.airflow.webserver_name }}
    chart: {{ include "airflow.labels.chart" . }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.airflow.webserver_name }} # has to match .spec.template.metadata.labels
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.airflow.webserver_name }} # has to match .spec.selector.matchLabels
        release: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 10
      restartPolicy: Always
      serviceAccountName: {{ .Values.serviceAccount.name }}
      volumes:
        - name: {{ .Values.storage.volume_name }}
          persistentVolumeClaim:
            claimName: {{ .Values.storage.pvc_name }}
      containers:
        - name: {{ .Values.airflow.webserver_name }}-container
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          resources:
            requests:
              memory: "1000Mi"
              cpu: "1"
            limits:
              memory: "1000Mi"
              cpu: "2"
          ports:
            - name: web
              containerPort: 8080
              protocol: TCP
          envFrom:
          - configMapRef:
              name: {{ .Values.airflow.config_map }}
          command: [ "bash" ]
          args: [ "/airflow-bin/start_webserver.sh"]
          volumeMounts:
            - mountPath: {{ .Values.storage.volume_mount_path }}
              name: {{ .Values.storage.volume_name }}
      imagePullSecrets:
        - name: regcred